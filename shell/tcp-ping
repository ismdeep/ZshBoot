#!/usr/bin/env bash

set -e

# 日志函数
# 日志颜色代码：URL_ADDRESS# 日志颜色代码：https://misc.flogisoft.com/bash/tip_colors_and_formatting
# 日志格式：时间 [日志级别] 日志内容
# 日志级别：DEBUG, INFO, OK, WARN, ERROR
# 日志颜色：蓝色, 青色, 绿色, 黄色, 红色
# 日志输出：标准输出, 标准错误
# 日志示例：2021-01-01 00:00:00 +0800 [ DEBUG ] hello world.
# 日志示例：2021-01-01 00:00:00 +0800 [ INFO ] hello world.
# 日志示例：2021-01-01 00:00:00 +0800 [ OK ] hello world.
# 日志示例：2021-01-01 00:00:00 +0800 [ WARN ] hello world.
# 日志示例：2021-01-01 00:00:00 +0800 [ ERROR ] hello world.
if [[ "${TERM}" =~ ^(xterm|screen|vt100) ]]; then
  log_debug() {   echo -e "$(date '+%Y-%m-%d %H:%M:%S %z') [ \033[34mDEBUG\033[0m ] $*"; }
  log_info() {    echo -e "$(date '+%Y-%m-%d %H:%M:%S %z') [ \033[36mINFO\033[0m ] $*"; }
  log_success() { echo -e "$(date '+%Y-%m-%d %H:%M:%S %z') [ \033[32mOK\033[0m ] $*"; }
  log_warn() {    echo -e "$(date '+%Y-%m-%d %H:%M:%S %z') [ \033[33mWARN\033[0m ] $*" >&2; }
  log_error() {   echo -e "$(date '+%Y-%m-%d %H:%M:%S %z') [ \033[31mERROR\033[0m ] $*" >&2; }
  log_passed() { echo -e "$(date '+%Y-%m-%d %H:%M:%S %z') [ \033[32mPASSED\033[0m ] $*"; }
  log_failed() {   echo -e "$(date '+%Y-%m-%d %H:%M:%S %z') [ \033[31mFAILED\033[0m ] $*" >&2; }
else
  log_debug() {   echo -e "$(date '+%Y-%m-%d %H:%M:%S %z') [ DEBUG ] $*"; }
  log_info() {    echo -e "$(date '+%Y-%m-%d %H:%M:%S %z') [ INFO ] $*"; }
  log_success() { echo -e "$(date '+%Y-%m-%d %H:%M:%S %z') [ OK ] $*"; }
  log_warn() {    echo -e "$(date '+%Y-%m-%d %H:%M:%S %z') [ WARN ] $*" >&2; }
  log_error() {   echo -e "$(date '+%Y-%m-%d %H:%M:%S %z') [ ERROR ] $*" >&2; }
  log_passed() { echo -e "$(date '+%Y-%m-%d %H:%M:%S %z') [ PASSED ] $*"; }
  log_failed() {   echo -e "$(date '+%Y-%m-%d %H:%M:%S %z') [ FAILED ] $*" >&2; }
fi

command -v nc >/dev/null 2>&1 || (log_error "command required: nc" && false)

target="${1:?}"
port="${2:?}"

while true; do
  start_time=$(date +%s.%N)
  if nc -vz -w 2 "${target}" "${port}" >/dev/null 2>&1; then
    end_time=$(date +%s.%N)
    duration=$(echo "$end_time - $start_time" | bc -l | xargs printf "%.3f")
    log_passed "${target}:${port} (${duration}s)"
  else
    end_time=$(date +%s.%N)
    duration=$(echo "$end_time - $start_time" | bc -l | xargs printf "%.3f")
    log_failed "${target}:${port} (${duration}s)"
  fi
  sleep 1s
done
